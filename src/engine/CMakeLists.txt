add_library(bitmap INTERFACE bitmap.h)
target_link_libraries(bitmap INTERFACE absl::status)

add_library(logging INTERFACE logging.h)
target_link_libraries(logging INTERFACE absl::log)
target_link_libraries(logging INTERFACE absl::log_sink)
target_link_libraries(logging INTERFACE  absl::flags)
target_link_libraries(logging INTERFACE  absl::strings)

add_library(vector INTERFACE vector.h)
target_link_libraries(vector INTERFACE absl::strings)

add_library(util INTERFACE util.h)
target_link_libraries(util INTERFACE vector)

add_library(polygon polygon.cc)
target_link_libraries(polygon vector)

add_library(shape shape.cc)
target_link_libraries(shape vector)
target_link_libraries(shape polygon)

add_library(config config.cc)
target_link_libraries(config absl::strings)
target_link_libraries(config absl::str_format)
target_link_libraries(config SDL2-static SDL2_image SDL2_ttf)

add_library(controller controller.cc)
target_link_libraries(controller absl::log)
target_link_libraries(controller config)
target_link_libraries(controller SDL2-static SDL2_image SDL2_ttf)

add_library(focus INTERFACE focus.h)
target_link_libraries(focus INTERFACE controller)

add_library(tile_matrix tile_matrix.cc)
target_link_libraries(tile_matrix config)
target_link_libraries(tile_matrix absl::strings)
target_link_libraries(tile_matrix absl::status)
target_link_libraries(tile_matrix SDL2-static SDL2_image SDL2_ttf)

add_library(sprite sprite.cc)
target_link_libraries(sprite config)
target_link_libraries(sprite absl::strings)
target_link_libraries(sprite absl::status)
target_link_libraries(sprite SDL2-static SDL2_image SDL2_ttf)

add_library(camera camera.cc)
target_link_libraries(camera config)
target_link_libraries(camera vector)
target_link_libraries(camera absl::strings)
target_link_libraries(camera absl::status)
target_link_libraries(camera SDL2-static SDL2_image SDL2_ttf)

add_library(object object.cc)
target_link_libraries(object camera)
target_link_libraries(object config)
target_link_libraries(object polygon)
target_link_libraries(object vector)
target_link_libraries(object absl::flat_hash_set)
target_link_libraries(object absl::strings)
target_link_libraries(object absl::status)
target_link_libraries(object SDL2-static SDL2_image SDL2_ttf)

add_library(sprite_manager sprite_manager.cc)
target_link_libraries(sprite_manager camera)
target_link_libraries(sprite_manager config)
target_link_libraries(sprite_manager object)
target_link_libraries(sprite_manager sprite)
target_link_libraries(sprite_manager absl::flat_hash_set)
target_link_libraries(sprite_manager absl::flat_hash_map)
target_link_libraries(sprite_manager absl::log)
target_link_libraries(sprite_manager absl::strings)
target_link_libraries(sprite_manager absl::status)
target_link_libraries(sprite_manager absl::statusor)
target_link_libraries(sprite_manager SDL2-static SDL2_image SDL2_ttf)
target_link_libraries (sprite_manager ${SQLite3_LIBRARIES})

add_library(collision_manager collision_manager.cc)
target_link_libraries(collision_manager absl::flat_hash_map)
target_link_libraries(collision_manager absl::flat_hash_set)
target_link_libraries(collision_manager absl::log)
target_link_libraries(collision_manager absl::status)
target_link_libraries(collision_manager absl::strings)
target_link_libraries(collision_manager config)
target_link_libraries(collision_manager object)
target_link_libraries(collision_manager polygon)
target_link_libraries(collision_manager vector)

add_library(tile_manager tile_manager.cc)
target_link_libraries(tile_manager camera)
target_link_libraries(tile_manager config)
target_link_libraries(tile_manager collision_manager)
target_link_libraries(tile_manager sprite_manager)
target_link_libraries(tile_manager tile_matrix)
target_link_libraries(tile_manager absl::flat_hash_set)
target_link_libraries(tile_manager absl::strings)
target_link_libraries(tile_manager absl::status)
target_link_libraries(tile_manager SDL2-static SDL2_image SDL2_ttf)

add_library(creator creator.cc)
target_link_libraries(creator camera)
target_link_libraries(creator config)
target_link_libraries(creator controller)
target_link_libraries(creator focus)
target_link_libraries(creator shape)
target_link_libraries(creator vector)
target_link_libraries(creator util)

add_library(player player.cc)
target_link_libraries(player controller)
target_link_libraries(player camera)
target_link_libraries(player config)
target_link_libraries(player focus)
target_link_libraries(player object)
target_link_libraries(player sprite)
target_link_libraries(player absl::log)
target_link_libraries(player absl::strings)
target_link_libraries(player absl::status)
target_link_libraries(player SDL2-static SDL2_image)

add_library(map map.cc)
target_link_libraries(map camera)
target_link_libraries(map config)
target_link_libraries(map absl::strings)
target_link_libraries(map absl::status)
target_link_libraries(map SDL2main SDL2-static SDL2_image)

add_library(hud hud.cc)
target_link_libraries(hud camera)
target_link_libraries(hud config)
target_link_libraries(hud player)
target_link_libraries(hud absl::log)
target_link_libraries(hud absl::status)
target_link_libraries(hud absl::strings)
target_link_libraries(hud SDL2-static SDL2_image)
target_link_libraries(hud ${IMGUI_LIBRARIES}) 

add_library(engine game.cc)
target_link_libraries(engine camera)
target_link_libraries(engine config)
target_link_libraries(engine collision_manager)
target_link_libraries(engine controller)
target_link_libraries(engine creator)
target_link_libraries(engine focus)
target_link_libraries(engine hud)
target_link_libraries(engine map)
target_link_libraries(engine object)
target_link_libraries(engine player)
target_link_libraries(engine sprite_manager)
target_link_libraries(engine tile_manager)
target_link_libraries(engine tile_matrix)
target_link_libraries(engine absl::log)
target_link_libraries(engine absl::status)
target_link_libraries(engine SDL2-static SDL2_image SDL2_ttf)
target_link_libraries(engine ${IMGUI_LIBRARIES}) 